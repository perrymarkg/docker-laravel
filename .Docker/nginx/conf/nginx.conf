events {}
http {

    upstream docker-apache {
        # this will map to the 'service name' defined in the docker-compose file
        server apache:80;
    }

    upstream docker-echo-server {
        # this will map to the 'service name' defined in the docker-compose file
        server laravelecho:6598;
    }

    upstream docker-phpmyadmin {
        server phpmyadmin;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name ticketing-docker.com www.ticketing-docker.com;
        return 301 https://ticketing-docker.com$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ticketing-docker.com www.ticketing-docker.com;

        ssl_certificate    /etc/ssl/certificate.pem;
        ssl_certificate_key    /etc/ssl/key.pem;
        #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        location ~ ^/phpmyadmin/ {
            rewrite ^/phpmyadmin(/.*)$ $1 break;
            proxy_pass http://docker-phpmyadmin;
        }

        location / {
            proxy_pass  http://docker-apache;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

       location /socket.io {
            proxy_pass  http://docker-echo-server;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "Upgrade";
        }

        
    }
}